apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
    spec:
      initContainers:
        - name: init-config
          image: busybox
          command:
            - /bin/sh
            - -c
            - |
              echo "Replacing environment variables in init scripts..."
              cp /mysql-init-scripts/*.sql /docker-entrypoint-initdb.d/
              sed -i 's/{{DEBEZIUM_USERNAME}}/'"$DEBEZIUM_USERNAME"'/g' /docker-entrypoint-initdb.d/*.sql
              sed -i 's/{{DEBEZIUM_PASSWORD}}/'"$DEBEZIUM_PASSWORD"'/g' /docker-entrypoint-initdb.d/*.sql
              echo "Environment variables in init scripts replaced."
          env:
            - name: DEBEZIUM_USERNAME
              valueFrom:
                secretKeyRef:
                  name: debezium-secret
                  key: username
            - name: DEBEZIUM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: debezium-secret
                  key: password
          volumeMounts:
            - name: mysql-init-scripts
              mountPath: /mysql-init-scripts
            - name: docker-entrypoint-initdb
              mountPath: /docker-entrypoint-initdb.d
      containers:
        - name: mysql
          image: mysql:latest
          env:
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-env
                  key: mysql-database
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-config
              mountPath: /etc/mysql/conf.d
            - name: docker-entrypoint-initdb
              mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            timeoutSeconds: 5
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: mysql-config
          configMap:
            name: mysql-config
        - name: mysql-init-scripts
          configMap:
            name: mysql-init-scripts
        - name: docker-entrypoint-initdb
          emptyDir: {}
